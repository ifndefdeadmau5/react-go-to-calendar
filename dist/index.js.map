{"version":3,"sources":["../src/index.ts","../react-imports.js","../src/components/Calendar/Calendar.tsx","../src/components/Calendar/useCalendar.tsx","../src/components/Calendar/CalendarHeader.tsx","../src/components/Calendar/CalendarContainer.tsx","../src/components/Calendar/CalendarMonth.tsx"],"names":[],"mappings":"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","sourcesContent":["export * from \"./components\";\n","// react-import.js\nimport React from \"react\";\n\nexport { React };\n","import { DateTime } from \"luxon\";\nimport useCalendar from \"./useCalendar\";\nimport CalendarHeader from \"./CalendarHeader\";\nimport CalendarContainer from \"./CalendarContainer\";\nimport CalendarMonth from \"./CalendarMonth\";\nimport \"./calendar.css\";\nimport CalendarDay from \"./CalendarDay\";\n\ntype Provided = { days: DateTime[] };\ninterface CalendarProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\"> {\n  children?: (provided: Provided) => JSX.Element[];\n}\n\nexport const CalendarHeaders = ({\n  className,\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={`goto-calendar-week-grid goto-calendar-week-header ${className}`}\n  >\n    <CalendarHeader>Mon</CalendarHeader>\n    <CalendarHeader>Tue</CalendarHeader>\n    <CalendarHeader>Wed</CalendarHeader>\n    <CalendarHeader>Thu</CalendarHeader>\n    <CalendarHeader>Fri</CalendarHeader>\n    <CalendarHeader weekend>Sat</CalendarHeader>\n    <CalendarHeader weekend>Sun</CalendarHeader>\n  </div>\n);\n\nconst Calendar = ({ children, ...props }: CalendarProps) => {\n  const [{ months }, setCursor] = useCalendar({\n    initialCursor: DateTime.now().minus({ weeks: 12 }),\n    weeks: 24,\n  });\n\n  return (\n    <CalendarContainer {...props}>\n      <CalendarHeaders />\n      {months.map((days) => (\n        <CalendarMonth key={days?.[0]?.toFormat(\"yyyy-MM-DD\")} days={days}>\n          {children}\n        </CalendarMonth>\n      ))}\n    </CalendarContainer>\n  );\n};\n\nexport default Calendar;\n","import { DateTime } from \"luxon\";\nimport { Dispatch, SetStateAction, useMemo, useState } from \"react\";\n\ninterface useCalendarOptions {\n  initialCursor?: DateTime;\n  weeks?: number;\n}\n\n// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\nconst chunk = (input: DateTime[], size: number) => {\n  return input.reduce((arr, item, idx) => {\n    return idx % size === 0\n      ? [...arr, [item]]\n      : [...arr.slice(0, -1), [...arr.slice(-1)[0], item]];\n  }, []);\n};\n\nconst useCalendar: (options?: useCalendarOptions) => [\n  {\n    days: DateTime[];\n    months: DateTime[][];\n  },\n  Dispatch<SetStateAction<DateTime>>\n] = (options = {}) => {\n  const {\n    weeks: numberOfWeeks = 48,\n    initialCursor: initialDateCursor = DateTime.now().startOf(\"week\"),\n  } = options;\n  const [cursor, setCursor] = useState(initialDateCursor.startOf(\"week\"));\n\n  const days = useMemo(() => {\n    return [...Array(numberOfWeeks)].reduce<DateTime[]>((acc, _, weekIndex) => {\n      const startOfWeek = cursor.plus({ weeks: weekIndex });\n      const wholeWeek = [...Array(7)].map((_, dayIndex) =>\n        startOfWeek.plus({ days: dayIndex })\n      );\n      return [...acc, ...wholeWeek];\n    }, []);\n  }, [numberOfWeeks, cursor]);\n\n  // additional logic, divide by month\n  const dividedByMonth = useMemo(\n    () =>\n      chunk(days, 7).reduce<DateTime[][]>((acc, week) => {\n        const startOfWeek = week[0];\n        const shouldCreateNewMonth =\n          startOfWeek.get(\"day\") === 1 ||\n          startOfWeek.plus({ days: 6 }).get(\"month\") !==\n            startOfWeek.get(\"month\");\n\n        if (shouldCreateNewMonth) {\n          return [...acc, [...week]];\n        }\n\n        // not creating new array, just appending to the last month's array\n        const [last, ...rest] = [acc.pop(), ...acc];\n        return [...rest, [...(last ?? []), ...week]];\n      }, []),\n    [days]\n  );\n\n  return [{ days, months: dividedByMonth }, setCursor];\n};\n\nexport default useCalendar;\n","import { ReactNode } from \"react\";\n\nexport interface CalendarHeaderProps {\n  weekend?: boolean;\n  children?: ReactNode;\n}\n\nconst CalendarHeader = (props: CalendarHeaderProps) => {\n  const { children, weekend, ...others } = props;\n\n  return (\n    <div className=\"goto-calendar-header-cell\" {...others}>\n      <p>{children}</p>\n    </div>\n  );\n};\n\nexport default CalendarHeader;\n","import { forwardRef, ReactNode } from \"react\";\n\ninterface CalendarDayProps extends React.HTMLAttributes<HTMLDivElement> {\n  children?: ReactNode;\n}\n\nconst CalendarContainer = ({ children, ...others }: CalendarDayProps, ref) => {\n  return (\n    <div\n      ref={ref}\n      id={\"calendar-scroll-container\"}\n      className=\"goto-calendar-container\"\n      {...others}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default forwardRef(CalendarContainer);\n","import { DateTime } from \"luxon\";\nimport { forwardRef } from \"react\";\nimport CalendarDay from \"./CalendarDay\";\n\ninterface CalendarMonthProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\"> {\n  children?: (provided: { days: DateTime[] }) => JSX.Element[];\n  days?: DateTime[];\n}\n\nconst CalendarMonth = (\n  { children, days = [], ...others }: CalendarMonthProps,\n  ref\n) => {\n  return (\n    <div\n      ref={ref}\n      key={days[0].toFormat(\"yyyy-MM-dd\")}\n      className=\"goto-calendar-week-grid\"\n      {...others}\n    >\n      {children({ days })}\n    </div>\n  );\n};\n\nexport default forwardRef(CalendarMonth);\n"]}