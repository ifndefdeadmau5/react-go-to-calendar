{"version":3,"sources":["../src/index.ts","../react-imports.js","../src/components/Calendar/Calendar.tsx","../src/components/Calendar/useCalendar.tsx","../src/components/Calendar/CalendarHeader.tsx","../src/components/Calendar/CalendarContainer.tsx","../src/components/Calendar/CalendarMonth.tsx","../src/components/Calendar/CalendarDay.tsx","../src/components/Calendar/CalendarDayHeader.tsx","../src/utils/index.ts","../src/components/Calendar/StickyCalendarDayHeader.tsx"],"names":[],"mappings":"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","sourcesContent":["export * from \"./components\";\n","// react-import.js\nimport React from \"react\";\n\nexport { React };\n","import { DateTime } from \"luxon\";\nimport useCalendar from \"./useCalendar\";\nimport CalendarHeader from \"./CalendarHeader\";\nimport CalendarContainer from \"./CalendarContainer\";\nimport CalendarMonth, { CalendarMonthChildrenFn } from \"./CalendarMonth\";\nimport \"./calendar.css\";\n\ninterface CalendarProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\"> {\n  children?: CalendarMonthChildrenFn;\n}\n\nexport const CalendarHeaders = ({\n  className,\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={`goto-calendar-week-grid goto-calendar-week-header ${className}`}\n  >\n    <CalendarHeader>Mon</CalendarHeader>\n    <CalendarHeader>Tue</CalendarHeader>\n    <CalendarHeader>Wed</CalendarHeader>\n    <CalendarHeader>Thu</CalendarHeader>\n    <CalendarHeader>Fri</CalendarHeader>\n    <CalendarHeader>Sat</CalendarHeader>\n    <CalendarHeader>Sun</CalendarHeader>\n  </div>\n);\n\nconst Calendar = ({ children, ...props }: CalendarProps) => {\n  const [{ months }, setCursor] = useCalendar({\n    initialCursor: DateTime.now().minus({ weeks: 12 }),\n    weeks: 24,\n  });\n\n  return (\n    <CalendarContainer {...props}>\n      <CalendarHeaders />\n      {months.map((days) => (\n        <CalendarMonth key={days?.[0]?.toFormat(\"yyyy-MM-DD\")} days={days}>\n          {children}\n        </CalendarMonth>\n      ))}\n    </CalendarContainer>\n  );\n};\n\nexport default Calendar;\n","import { DateTime } from \"luxon\";\nimport { Dispatch, SetStateAction, useMemo, useState } from \"react\";\n\ninterface useCalendarOptions {\n  initialCursor?: DateTime;\n  weeks?: number;\n}\n\n// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_chunk\nconst chunk = (input: DateTime[], size: number) => {\n  return input.reduce((arr, item, idx) => {\n    return idx % size === 0\n      ? [...arr, [item]]\n      : [...arr.slice(0, -1), [...arr.slice(-1)[0], item]];\n  }, []);\n};\n\nconst useCalendar: (options?: useCalendarOptions) => [\n  {\n    days: DateTime[];\n    months: DateTime[][];\n  },\n  Dispatch<SetStateAction<DateTime>>\n] = (options = {}) => {\n  const {\n    weeks: numberOfWeeks = 48,\n    initialCursor: initialDateCursor = DateTime.now().startOf(\"week\"),\n  } = options;\n  const [cursor, setCursor] = useState(initialDateCursor.startOf(\"week\"));\n\n  const days = useMemo(() => {\n    return [...Array(numberOfWeeks)].reduce<DateTime[]>((acc, _, weekIndex) => {\n      const startOfWeek = cursor.plus({ weeks: weekIndex });\n      const wholeWeek = [...Array(7)].map((_, dayIndex) =>\n        startOfWeek.plus({ days: dayIndex })\n      );\n      return [...acc, ...wholeWeek];\n    }, []);\n  }, [numberOfWeeks, cursor]);\n\n  // additional logic, divide by month\n  const dividedByMonth = useMemo(\n    () =>\n      chunk(days, 7).reduce<DateTime[][]>((acc, week) => {\n        const startOfWeek = week[0];\n        const shouldCreateNewMonth =\n          startOfWeek.get(\"day\") === 1 ||\n          startOfWeek.plus({ days: 6 }).get(\"month\") !==\n            startOfWeek.get(\"month\");\n\n        if (shouldCreateNewMonth) {\n          return [...acc, [...week]];\n        }\n\n        // not creating new array, just appending to the last month's array\n        const [last, ...rest] = [acc.pop(), ...acc];\n        return [...rest, [...(last ?? []), ...week]];\n      }, []),\n    [days]\n  );\n\n  return [{ days, months: dividedByMonth }, setCursor];\n};\n\nexport default useCalendar;\n","import { ReactNode } from \"react\";\n\nexport interface CalendarHeaderProps {\n  children?: ReactNode;\n}\n\nconst CalendarHeader = (props: CalendarHeaderProps) => {\n  const { children, ...others } = props;\n\n  return (\n    <div className=\"goto-calendar-header-cell\" {...others}>\n      <p>{children}</p>\n    </div>\n  );\n};\n\nexport default CalendarHeader;\n","import { forwardRef, ReactNode } from \"react\";\n\ninterface CalendarDayProps extends React.HTMLAttributes<HTMLDivElement> {\n  children?: ReactNode;\n}\n\nconst CalendarContainer = ({ children, ...others }: CalendarDayProps, ref) => {\n  return (\n    <div\n      ref={ref}\n      id={\"calendar-scroll-container\"}\n      className=\"goto-calendar-container\"\n      {...others}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default forwardRef(CalendarContainer);\n","import { DateTime } from \"luxon\";\nimport { forwardRef } from \"react\";\nimport CalendarDay, { CalendarDayProps } from \"./CalendarDay\";\n\ntype Provided = {\n  days: DateTime[];\n  getDayProps: (index: number) => Partial<CalendarDayProps>;\n};\n\nexport type CalendarMonthChildrenFn = (provided: Provided) => JSX.Element[];\n\ninterface CalendarMonthProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\"> {\n  children?: CalendarMonthChildrenFn;\n  days?: DateTime[];\n}\n\nconst CalendarMonth = (\n  { children, days = [], ...others }: CalendarMonthProps,\n  ref\n) => {\n  return (\n    <div\n      ref={ref}\n      key={days[0].toFormat(\"yyyy-MM-dd\")}\n      className=\"goto-calendar-week-grid\"\n      {...others}\n    >\n      {children\n        ? children({\n            days,\n            getDayProps: (index) => {\n              return {\n                stickyCell: index === 0,\n              };\n            },\n          })\n        : days.map((day, i) => {\n            return (\n              <CalendarDay\n                key={day.toFormat(\"yyyy-MM-DD\")}\n                day={day}\n                stickyCell={i === 0}\n              />\n            );\n          })}\n    </div>\n  );\n};\n\nexport default forwardRef(CalendarMonth);\n","import { DateTime } from \"luxon\";\nimport { forwardRef, Fragment, ReactNode } from \"react\";\nimport CalendarDayHeader from \"./CalendarDayHeader\";\nimport StickyCalendarDayHeader from \"./StickyCalendarDayHeader\";\n\nexport interface CalendarDayProps extends React.HTMLAttributes<HTMLDivElement> {\n  children?: ReactNode;\n  stickyCell?: boolean;\n  day: DateTime;\n}\n\nconst CalendarDay = (\n  { children, stickyCell = false, day, ...others }: CalendarDayProps,\n  ref\n) => {\n  return stickyCell ? (\n    <Fragment key={day.toSeconds()}>\n      <StickyCalendarDayHeader\n        date={day}\n        scrollContainerId={\"calendar-scroll-container\"}\n      />\n      <div\n        ref={ref}\n        className=\"goto-calendar-day-cell\"\n        {...others}\n        key={day.toSeconds()}\n        style={{\n          gridRow: \"2 / 3\",\n        }}\n      >\n        {children}\n      </div>\n    </Fragment>\n  ) : (\n    <div\n      ref={ref}\n      className=\"goto-calendar-day-cell\"\n      {...others}\n      key={day.toSeconds()}\n    >\n      <CalendarDayHeader date={day} />\n      {children}\n    </div>\n  );\n};\n\nexport default forwardRef(CalendarDay);\n","import { DateTime } from \"luxon\";\nimport { forwardRef } from \"react\";\nimport { findStartOfMonth } from \"../../utils\";\n\nconst YearMonth = ({\n  datetime,\n  offset = 0,\n  ...others\n}: {\n  datetime: DateTime;\n  offset?: number;\n  className?: string;\n}) => (\n  <div {...others}>\n    <span>{datetime.toFormat(\"yyyy\")}-</span>\n    <span>{datetime.toFormat(\"MM\")}</span>\n  </div>\n);\n\nexport interface CalendarDayHeaderProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  date: DateTime;\n  showYear?: boolean;\n}\n\nconst CalendarDayHeader = (\n  {\n    date,\n    showYear = false,\n    className,\n    children,\n    ...others\n  }: CalendarDayHeaderProps,\n  ref\n) => {\n  const day = date.get(\"day\");\n  const isStartOfMonth = day === 1;\n  const startOfWeek = date.startOf(\"week\");\n  const startOfMonth = findStartOfMonth({ date: startOfWeek, range: 7 }); // one week === 7 days\n\n  return (\n    <div\n      ref={ref}\n      className={`${className} goto-calendar-day-header`}\n      {...others}\n    >\n      {showYear && startOfMonth ? (\n        <YearMonth datetime={startOfMonth!} />\n      ) : (\n        children ?? <span />\n      )}\n\n      <div\n        className={`goto-calendar-day-number ${\n          showYear ? \"toggle-opacity\" : \"\"\n        }`}\n      >\n        {isStartOfMonth && <span>{date.get(\"month\")}/</span>}\n        <span>{day}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default forwardRef(CalendarDayHeader);\n","import { DateTime } from \"luxon\";\n\nexport const findStartOfMonth = ({\n  date,\n  range,\n}: {\n  date: DateTime;\n  range: number;\n}) => {\n  const wholeWeek = [...new Array(range)].map((_, i) => date.plus({ days: i }));\n  return wholeWeek.find((v) => v.get(\"day\") === 1);\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport CalendarDayHeader, { CalendarDayHeaderProps } from \"./CalendarDayHeader\";\n\ninterface StickyCalendarDayHeaderProps extends CalendarDayHeaderProps {\n  scrollContainerId?: string;\n  disableAnimation?: boolean;\n  minFontSize?: number;\n  fontSizeScale?: number;\n  marginLeftScale?: number;\n}\n\nconst StickyCalendarDayHeader = ({\n  scrollContainerId,\n  minFontSize = 14,\n  fontSizeScale = 6,\n  marginLeftScale = 8,\n  ...props\n}: StickyCalendarDayHeaderProps) => {\n  const calendarHeaderRef = useRef<HTMLElement | null>(null);\n  const [node, setNode] = useState(null);\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  useEffect(() => {\n    if (observer.current) observer.current.disconnect();\n    observer.current = new window.IntersectionObserver(\n      ([entry]) => {\n        if (calendarHeaderRef.current) {\n          calendarHeaderRef.current.style.fontSize = `${\n            minFontSize +\n            fontSizeScale -\n            entry.intersectionRatio * fontSizeScale\n          }px`;\n          calendarHeaderRef.current.style.marginLeft = `${\n            marginLeftScale - entry.intersectionRatio * marginLeftScale\n          }px`;\n          calendarHeaderRef.current.style.setProperty(\n            \"--day-opacity\",\n            `${entry.intersectionRatio < 0.8 ? 0 : 1}`\n          );\n        }\n      },\n      {\n        root: scrollContainerId\n          ? document.querySelector(`#${scrollContainerId}`)\n          : null,\n        rootMargin: \"-34px\", // FIXME: remove constant\n        threshold: [\n          ...Array(100)\n            .fill(0)\n            .map((_, i) => (i + 1 * 1) / 100),\n        ],\n      }\n    );\n\n    const { current: currentObserver } = observer;\n\n    if (node) {\n      currentObserver.observe(node);\n      calendarHeaderRef.current = node;\n    }\n\n    return () => currentObserver.disconnect();\n  }, [node, scrollContainerId]);\n\n  return (\n    <CalendarDayHeader\n      className=\"sticky-goto-calendar-day-header\"\n      ref={setNode}\n      showYear\n      {...props}\n    />\n  );\n};\n\nexport default StickyCalendarDayHeader;\n"]}